syntax = "proto3";

package polarsignals.billing.v1alpha1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/polarsignals/polarsignals/gen/go/billing";

// BillingService service provides the ability to manage billing accounts.
service BillingService {
  // GetConfig returns the billing configuration.
  rpc GetConfig(GetConfigRequest) returns (GetConfigResponse) {
    option (google.api.http) = {get: "/v1/config"};
  }

  rpc GetSubscription(GetSubscriptionRequest) returns (GetSubscriptionResponse) {
    option (google.api.http) = {get: "/v1/subscriptions/{organization_id}"};
  }

  // CreateSession creates a new billing session.
  rpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse) {
    option (google.api.http) = {
      post: "/v1/sessions"
      body: "*"
    };
  }

  // GetInvoicesUpcoming returns the upcoming invoices.
  rpc GetInvoicesUpcoming(GetInvoicesUpcomingRequest) returns (GetInvoicesUpcomingResponse) {
    option (google.api.http) = {get: "/v1/invoices/upcoming/{organization_id}"};
  }

  // CancelSubscription cancels the subscription.
  rpc CancelSubscription(CancelSubscriptionRequest) returns (CancelSubscriptionResponse) {
    option (google.api.http) = {delete: "/v1/subscriptions/{organization_id}"};
  }

  rpc GetCustomer(GetCustomerRequest) returns (GetCustomerResponse) {
    option (google.api.http) = {get: "/v1/customers/{organization_id}"};
  }
  rpc UpdateCustomer(UpdateCustomerRequest) returns (UpdateCustomerResponse) {
    option (google.api.http) = {
      patch: "/v1/customers/{organization_id}"
      body: "*"
    };
  }
}

// GetConfigRequest is the request for the GetConfig method.
message GetConfigRequest {
  // Organization ID.
  string organization_id = 1;
}

// GetConfigResponse is the response for the GetConfig method.
message GetConfigResponse {
  // Public key of the Stripe API.
  string publishable_key = 1;
}

message Card {
  // Card brand.
  string brand = 1;
  // Last 4 digits of the card.
  string last4 = 2;
  // Expiration month of the card.
  int32 exp_month = 3;
  // Expiration year of the card.
  int32 exp_year = 4;
}

// PaymentMethod represents a payment method of a subscription.
message PaymentMethod {
  Card card = 1;
}

message GetSubscriptionRequest {
  // Organization ID.
  string organization_id = 1;
}

message GetSubscriptionResponse {
  string id = 1;
  string status = 2;
  google.protobuf.Timestamp created = 3;
  PaymentMethod payment_method = 4;
}

// CreateSessionRequest is the request for the CreateSession method.
message CreateSessionRequest {
  // Organization ID.
  string organization_id = 1;
  // Plan ID.
  string price_id = 2;
}

// CreateSessionResponse is the response for the CreateSession method.
message CreateSessionResponse {
  // Session ID.
  string session_id = 1;
}

// GetInvoicesUpcomingRequest is the request for the GetInvoicesUpcoming method.
message GetInvoicesUpcomingRequest {
  // Organization ID.
  string organization_id = 1;
}

// GetInvoicesUpcomingResponse is the response for the GetInvoicesUpcoming method.
message GetInvoicesUpcomingResponse {
  // Amount due of the upcoming invoice.
  int32 amount_due = 1;
  // The value of the paid amount of the upcoming invoice.
  int32 amount_paid = 2;
  // The value of the unpaid amount of the upcoming invoice.
  int32 amount_remaining = 3;
}

// CancelSubscriptionRequest is the request for the CancelSubscription method.
message CancelSubscriptionRequest {
  // Organization ID.
  string organization_id = 1;
}

// CancelSubscriptionResponse is the response for the CancelSubscription method.
message CancelSubscriptionResponse {}

message GetCustomerRequest {
  // Organization ID.
  string organization_id = 1;
}

message GetCustomerResponse {
  // Customer name.
  string customer_name = 1;

  // Customer email.
  string customer_email = 2;
}

message UpdateCustomerRequest {
  // Organization ID.
  string organization_id = 1;

  // Customer name.
  string customer_name = 2;

  // Customer email.
  string customer_email = 3;
}

message UpdateCustomerResponse {}

syntax = "proto3";

package polarsignals.project;
option go_package = "github.com/polarsignals/polarsignals/gen/go/project";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service Projects {
  rpc GetProjects(GetProjectsRequest) returns (GetProjectsResponse) {
    option (google.api.http) = {
      get: "/v1"
    };
  }

  rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse) {
    option (google.api.http) = {
      post: "/v1"
      body: "*"
    };
  }

  rpc GetProject(GetProjectRequest) returns (GetProjectResponse) {
    option (google.api.http) = {
      get: "/v1/{id}"
    };
  }

  rpc UpdateProject(UpdateProjectRequest) returns (UpdateProjectResponse) {
    option (google.api.http) = {
      patch: "/v1/{id}"
      body: "*"
    };
  }

  rpc DeleteProject(DeleteProjectRequest) returns (DeleteProjectResponse) {
    option (google.api.http) = {
      delete: "/v1/{id}"
    };
  }

  rpc GetProjectTokens(GetProjectTokensRequest) returns (GetProjectTokensResponse) {
    option (google.api.http) = {
      get: "/v1/{id}/tokens"
    };
  }

  rpc CreateProjectToken(CreateProjectTokenRequest) returns (CreateProjectTokenResponse) {
    option (google.api.http) = {
      post: "/v1/{id}/tokens"
      body: "*"
    };
  }

  rpc DeleteProjectToken(DeleteProjectTokenRequest) returns (DeleteProjectTokenResponse) {
    option (google.api.http) = {
      delete: "/v1/{id}/tokens"
    };
  }
}

message Project {
  string id = 1;
  string name = 2;
}

message Organization {
  string id = 1;
  string name = 2;
  repeated Project projects = 3;
}

message Token {
  string id = 1;
  string name = 2;
  google.protobuf.Timestamp created_at = 3;
}

message GetProjectsRequest {
}

message GetProjectsResponse {
  repeated Organization organizations = 1;
}

message CreateProjectRequest {
  string name = 1;
  string organization_id = 2;
}

message CreateProjectResponse {
  string id = 1;
}

message GetProjectRequest {
  string id = 1;
}

message GetProjectResponse {
  Project project = 1;
}

message UpdateProjectRequest {
  string id = 1;
  string name = 2;
}

message UpdateProjectResponse {
}

message DeleteProjectRequest {
  string id = 1;
}

message DeleteProjectResponse {
}

message GetProjectTokensRequest {
  string id = 1;
}

message GetProjectTokensResponse {
  repeated Token tokens = 1;
}

message CreateProjectTokenRequest {
  string id = 1;
  string name = 2;
}

message CreateProjectTokenResponse {
  string token = 1;
}

message DeleteProjectTokenRequest {
  string id = 1;
  string token_id = 2;
}

message DeleteProjectTokenResponse {
}
